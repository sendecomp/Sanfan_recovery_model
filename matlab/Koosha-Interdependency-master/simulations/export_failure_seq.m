function export_failure_seq(file_name)

FAILURE_SEQ_PATH = 'failure_seq';
DATA_PATH = 'data';

load(fullfile(FAILURE_SEQ_PATH, [file_name '.mat']));
load(fullfile(DATA_PATH, [file_name, '_comps.mat']))
in_fid = fopen(fullfile(FAILURE_SEQ_PATH, ...
    [file_name, '_initial.txt']), 'w');
out_fid = fopen(fullfile(FAILURE_SEQ_PATH, ...
    [file_name, '_result.txt']), 'w');
n = length(failure_seq);
m = length(failure_seq(1).line);
index = 0;
for i = 1 : n
    for j = 2 : m - 1
        if ~isempty([failure_seq(i).line{j}, ...
                failure_seq(i).facts{j}, ...
                failure_seq(i).pmu{j}, ...
                failure_seq(i).ds{j}]) %&& ...
%                 ~isempty([failure_seq(i).line{j+1}, ...
%                 failure_seq(i).facts{j+1}, ...
%                 failure_seq(i).pmu{j+1}, ...
%                 failure_seq(i).ds{j+1}])
            fprintf(in_fid, '%.0f ', index);
            fprintf(out_fid, '%.0f ', index);
            index = index + 1;
        else
            break
        end
        if ~isempty([failure_seq(i).line{1:j}])
            fprintf(in_fid, '%.0f ', ...
                [failure_seq(i).line{1:j}] - 1);
        end
        if ~isempty([failure_seq(i).facts{1:j}])
            fprintf(in_fid, '%.0f ', ...
                comps.line.n + ...
                [failure_seq(i).facts{1:j}] - 1);
        end
        if ~isempty([failure_seq(i).pmu{1:j}])
            fprintf(in_fid, '%.0f ', ...
                comps.line.n + ...
                comps.facts.n + ...
                [failure_seq(i).pmu{1:j}] - 1);
        end
        if ~isempty([failure_seq(i).ds{1:j}])
            fprintf(in_fid, '%.0f ', ...
                comps.line.n + ...
                comps.facts.n + ...
                comps.pmu.n + ...
                [failure_seq(i).ds{1:j}] - 1);
        end
        fprintf(in_fid, '\n');
        
        if ~isempty([failure_seq(i).line{j+1}])
            fprintf(out_fid, '%.0f ', ...
                [failure_seq(i).line{j+1}] - 1);
        end
        if ~isempty([failure_seq(i).facts{j+1}])
            fprintf(out_fid, '%.0f ', ...
                comps.line.n + ...
                [failure_seq(i).facts{j+1}] - 1);
        end
        if ~isempty([failure_seq(i).pmu{j+1}])
            fprintf(out_fid, '%.0f ', ...
                comps.line.n + ...
                comps.facts.n + ...
                [failure_seq(i).pmu{j+1}] - 1);
        end
        if ~isempty([failure_seq(i).ds{j+1}])
            fprintf(out_fid, '%.0f ', ...
                comps.line.n + ...
                comps.facts.n + ...
                comps.pmu.n + ...
                [failure_seq(i).ds{j+1}] - 1);
        end
        fprintf(out_fid, '\n');
    end
end

fclose(in_fid);
fclose(out_fid);
